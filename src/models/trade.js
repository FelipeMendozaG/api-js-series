const {sequelize} = require('../config/database');
const {DataTypes} = require('sequelize');
const License = require('./licences');
const Type = require('./type');
const Business = require('./busines');

const Trade = sequelize.define(
    'trade',
    {
        id:{
            primaryKey:true,
            autoIncrement:true,
            allowNull:false,
            type:DataTypes.INTEGER
        },
        business_name:{
            type:DataTypes.STRING,
            allowNull:false
        },
        ruc:{
            type:DataTypes.STRING,
            allowNull:false,
            references:{
                model:Business,
                key:'ruc'
            }
        },
        licence_id:{
            type:DataTypes.INTEGER,
            allowNull:false,
            references:{
                model:License,
                key:'id'
            }
        },
        ubication_id:{
            type:DataTypes.INTEGER,
            allowNull:false,
            references:{
                model:Type,
                key:'id'
            }
        },
        trade_business:{
            type:DataTypes.STRING,
            allowNull:false
        },
        address:{
            type:DataTypes.STRING,
            allowNull:false
        },
        sale_organization_id:{
            type:DataTypes.INTEGER,
            allowNull:false,
            references:{
                model:Type,
                key:'id'
            }
        },
        channel_id:{
            type:DataTypes.STRING,
            allowNull:false,
            references:{
                model:Type,
                key:'id'
            }
        },
        sector:{
            type:DataTypes.STRING,
            allowNull:false,
        },
        debtor_id:{
            type:DataTypes.INTEGER,
            allowNull:false,
            references:{
                model:Type,
                key:'id'
            }
        },
        denomination:{
            type:DataTypes.STRING,
            allowNull:false
        },
        center_id:{
            type:DataTypes.INTEGER,
            allowNull:false,
            references:{
                model:Type,
                key:'id'
            }
        },
        center_charity_id:{
            type:DataTypes.INTEGER,
            allowNull:false,
            references:{
                model:Type,
                key:'id'
            }
        },
        anydesk:{
            type:DataTypes.STRING,
            allowNull:false
        },
        host:{
            type:DataTypes.STRING,
            allowNull:true,
        },
        ip:{
            type:DataTypes.STRING,
            allowNull:true
        },
        number_indentifier:{
            type:DataTypes.STRING,
            allowNull:true
        },
        attached_code:{
            type:DataTypes.STRING,
            allowNull:false
        },
        electronic_series_fe:{
            type:DataTypes.STRING,
            allowNull:true
        },
        electronic_series_be:{
            type:DataTypes.STRING,
            allowNull:true
        },
        electronic_series_ncf:{
            type:DataTypes.STRING,
            allowNull:true
        },
        electronic_series_ncb:{
            type:DataTypes.STRING,
            allowNull:true
        },
        type_local_id:{
            type:DataTypes.INTEGER,
            allowNull:false,
            references:{
                model:Type,
                key:'id'
            }
        },
    },
    {
        timestamps:true,
        tableName:'trade'
    }
);

Trade.belongsTo(License,{foreignKey:'licence_id',as:'license'});
Trade.belongsTo(Type,{foreignKey:'channel_id',as:'channel'});
Trade.belongsTo(Type,{foreignKey:'center_id',as:'center'});
Trade.belongsTo(Type,{foreignKey:'ubication_id', as:'ubication'});
Trade.belongsTo(Type,{foreignKey:'debtor_id',as:'debtor'});
Trade.belongsTo(Type,{foreignKey:'center_charity_id',as:'center_charity'})
Trade.belongsTo(Type,{foreignKey:'sale_organization_id',as:'sale_organization'})
Trade.belongsTo(Type,{foreignKey:'type_local_id',as:'type_local'})
Trade.belongsTo(Business,{foreignKey:'ruc',as:'business_object'});

module.exports = Trade;